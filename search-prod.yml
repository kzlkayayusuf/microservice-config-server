eureka:
    client:
        fetchRegistry: true
        registerWithEureka: true
        serviceUrl:
            defaultZone: http://localhost:7007/eureka
    instance:
        instance-id: ${spring.application.name}:${instanceId:${random.value}}
        prefer-ip-address: true
server:
    port: 0
spring:
    application:
        name: search
    data:
        mongodb:
            database: inventory
            host: localhost
            port: 27017
    kafka:
        consumer:
            auto-offset-reset: earliest
            bootstrap-servers: localhost:9092
            group-id: carFilter
            key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
            properties:
                spring:
                    json:
                        trusted:
                            packages: '*'
            value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
        topic:
            name: topic-search
management:
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
  metrics:
    export:
      prometheus:
        enabled: true
